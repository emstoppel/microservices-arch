// Code generated by MockGen. DO NOT EDIT.
// Source: dao.go

// Package simulationsmocks is a generated GoMock package.
package simulationsmocks

import (
	context "context"
	reflect "reflect"

	simulations "github.com/emstoppel/microservices-arch/simulation"
	gomock "github.com/golang/mock/gomock"
)

// MockDao is a mock of Dao interface.
type MockDao struct {
	ctrl     *gomock.Controller
	recorder *MockDaoMockRecorder
}

// MockDaoMockRecorder is the mock recorder for MockDao.
type MockDaoMockRecorder struct {
	mock *MockDao
}

// NewMockDao creates a new mock instance.
func NewMockDao(ctrl *gomock.Controller) *MockDao {
	mock := &MockDao{ctrl: ctrl}
	mock.recorder = &MockDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDao) EXPECT() *MockDaoMockRecorder {
	return m.recorder
}

// GetSimulation mocks base method.
func (m *MockDao) Get(ctx context.Context, simulationID int64) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Get", ctx, simulationID)
}

// GetSimulation indicates an expected call of GetSimulation.
func (mr *MockDaoMockRecorder) GetSimulation(ctx, simulationID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDao)(nil).Get), ctx, simulationID)
}

// SaveSimulation mocks base method.
func (m *MockDao) Save(ctx context.Context, simulation simulations.SimulationSetup) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Save", ctx, simulation)
}

// SaveSimulation indicates an expected call of SaveSimulation.
func (mr *MockDaoMockRecorder) SaveSimulation(ctx, simulation interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDao)(nil).Save), ctx, simulation)
}
